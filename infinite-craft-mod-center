javascript:const container = document.createElement('div');
container.style.position = 'fixed';
container.style.top = '0';
container.style.left = '0';
container.style.height = '100%';
container.style.width = '250px';
container.style.backgroundColor = 'white';
container.style.padding = '20px';
container.style.borderRight = '2px solid black';
container.style.zIndex = '9999';
container.style.overflow = 'hidden';
container.style.resize = 'both';
container.style.overflow = 'auto';
container.style.userSelect = 'none';

const heading = document.createElement('h1');
heading.textContent = 'Infinite Craft Mod Center';
container.appendChild(heading);

const loadButton = document.createElement('input');
loadButton.type = 'file';
loadButton.style.marginTop = '10px';
loadButton.addEventListener('change', handleFileSelect);
container.appendChild(loadButton);

const addMultipleItemsBtn = document.createElement('button');
addMultipleItemsBtn.textContent = 'Add Multiple Items';
addMultipleItemsBtn.style.marginTop = '10px';
addMultipleItemsBtn.addEventListener('click', addItems);
container.appendChild(addMultipleItemsBtn);

const addSingleItemBtn = document.createElement('button');
addSingleItemBtn.textContent = 'Add Single Item';
addSingleItemBtn.style.marginTop = '10px';
addSingleItemBtn.addEventListener('click', addItem);
container.appendChild(addSingleItemBtn);

const exportDataBtn = document.createElement('button');
exportDataBtn.textContent = 'Export Data';
exportDataBtn.style.marginTop = '10px';
exportDataBtn.addEventListener('click', exportData);
container.appendChild(exportDataBtn);

const wikibutton = document.createElement('button');
wikibutton.textContent = 'Open Infinite Craft Wiki';
wikibutton.style.marginTop = '10px';
wikibutton.addEventListener('click', openwiki);
container.appendChild(wikibutton);

const minimizeButton = document.createElement('button');
minimizeButton.textContent = '-';
minimizeButton.style.position = 'absolute';
minimizeButton.style.bottom = '10px';
minimizeButton.style.left = '10px';
minimizeButton.addEventListener('click', toggleUI);
container.appendChild(minimizeButton);

const plusButton = document.createElement('button');
plusButton.textContent = '+';
plusButton.style.position = 'absolute';
plusButton.style.bottom = '10px';
plusButton.style.left = '10px';
plusButton.style.display = 'none';
plusButton.addEventListener('click', toggleUI);
container.appendChild(plusButton);

let isMinimized = false;
let prevWidth = '300px';
const MINIMIZED_WIDTH = '50px';

function addNewItem() {
    let doesExists = localStorage.getItem("infinite-craft-data");
    let confirmed;
    let replace = '{"elements":[{"text":"Water","emoji":"💧","discovered":false},{"text":"Fire","emoji":"🔥","discovered":false},{"text":"Wind","emoji":"🌬️","discovered":false},{"text":"Earth","emoji":"🌍","discovered":false}]}';
    if (doesExists === null) {
        localStorage.setItem("infinite-craft-data", replace);
    }
    let initial = localStorage.getItem("infinite-craft-data");
    let array;
    if (initial) {
        array = JSON.parse(initial).elements;
    } else {
        array = [];
    }
    let text = prompt("What is the name of the item?");
    let emoji = prompt("What should the emoji be for the item? Hint: Press Windows + .");
    let discovered = confirm("Should the item be a first discovery?");
    let ItemsToAdd = {
        text: text,
        emoji: emoji,
        discovered: discovered
    };
    array.push(ItemsToAdd);
    let newItem = {
        elements: array
    };
    array = JSON.stringify(newItem);
    confirmed = confirm("Are you sure? This CANNOT be easily undone!");
    if (confirmed === true) {
        localStorage.setItem("infinite-craft-data", array);
        alert("Reloading!");
        window.location.reload();
    }
}

function toggleUI() {
    const isMinimized = container.style.width === MINIMIZED_WIDTH;
    if (isMinimized) {
        container.style.width = prevWidth;
        minimizeButton.textContent = '-';
        heading.style.display = 'block';
        loadButton.style.display = 'block';
        addMultipleItemsBtn.style.display = 'block';
        addSingleItemBtn.style.display = 'block';
        exportDataBtn.style.display = 'block';
    } else {
        prevWidth = container.style.width;
        container.style.width = MINIMIZED_WIDTH;
        minimizeButton.textContent = '+';
        heading.style.display = 'none';
        loadButton.style.display = 'none';
        addMultipleItemsBtn.style.display = 'none';
        addSingleItemBtn.style.display = 'none';
        exportDataBtn.style.display = 'none';
    }
}

function openwiki() {
       window.open('https://expitau.github.io/InfiniteCraftWiki/', '_blank');
}

function handleFileSelect(event) {
    const file = event.target.files[0];
    const reader = new FileReader();
    reader.onload = function(event) {
        const data = JSON.parse(event.target.result);
        data.forEach(item => {
            let initial = localStorage.getItem("infinite-craft-data");
            let array;
            if (initial) {
                array = JSON.parse(initial).elements;
            } else {
                array = [];
            }
            array.push(item);
            let newItem = {
                elements: array
            };
            localStorage.setItem("infinite-craft-data", JSON.stringify(newItem));
        });
        location.reload();
    };
    reader.readAsText(file);
}

function addItems() {
    let doesExists = localStorage.getItem('infinite-craft-data');
    let confirmed;
    let replace = '{"elements":[{"text":"Water","emoji":"💧","discovered":false},{"text":"Fire","emoji":"🔥","discovered":false},{"text":"Wind","emoji":"🌬️","discovered":false},{"text":"Earth","emoji":"🌍","discovered":false}]}';
    if (doesExists === null) {
        localStorage.setItem('infinite-craft-data', replace);
    }
    let initial = localStorage.getItem('infinite-craft-data');
    let array;
    if (initial) {
        array = JSON.parse(initial).elements;
    } else {
        array = [];
    }
    let userInput = prompt('Enter items with name and emoji separated by a space for each item. Example: 💸 Money 💰');
    let items = userInput.split(' ');
    if (items.length % 2 !== 0) {
        alert('Invalid number of items. Please enter both name and emoji for each item.');
        return;
    }
    for (let i = 0; i < items.length; i += 2) {
        let text = items[i];
        let emoji = items[i + 1];
        let ItemsToAdd = {
            text: text,
            emoji: emoji,
            discovered: false
        };
        array.push(ItemsToAdd);
    }
    let newItem = {
        elements: array
    };
    array = JSON.stringify(newItem);
    confirmed = confirm('Are you sure? This CANNOT be easily undone!');
    if (confirmed === true) {
        localStorage.setItem('infinite-craft-data', array);
        alert('Reloading!');
        window.location.reload();
    }
}

function addItem() {
    let doesExists = localStorage.getItem('infinite-craft-data');
    let confirmed;
    let replace = '{"elements":[{"text":"Water","emoji":"💧","discovered":false},{"text":"Fire","emoji":"🔥","discovered":false},{"text":"Wind","emoji":"🌬️","discovered":false},{"text":"Earth","emoji":"🌍","discovered":false}]}';
    if (doesExists === null) {
        localStorage.setItem('infinite-craft-data', replace);
    }
    let initial = localStorage.getItem('infinite-craft-data');
    let array;
    if (initial) {
        array = JSON.parse(initial).elements;
    } else {
        array = [];
    }
    let text = prompt('What is the name of the item?');
    let emoji = prompt('What should the emoji be for the item? Hint: Press Windows + .');
    let discovered = confirm('Should the item be a first discovery?');
    let ItemsToAdd = {
        text: text,
        emoji: emoji,
        discovered: discovered
    };
    array.push(ItemsToAdd);
    let newItem = {
        elements: array
    };
    array = JSON.stringify(newItem);
    confirmed = confirm('Are you sure? This CANNOT be easily undone!');
    if (confirmed === true) {
        localStorage.setItem('infinite-craft-data', array);
        alert('Reloading!');
        window.location.reload();
    }
    console.log('DONE');
}

function exportData() {
    const data = localStorage.getItem('infinite-craft-data');
    if (data) {
        prompt('Copy this:', data);
    } else {
        alert('No data found!');
    }
}

document.body.appendChild(container);

container.style.display = 'block';
saveUIState();
